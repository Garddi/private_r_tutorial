install.package("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("revealjs")
Sys.time()
format(Sys.time(), "%d-%m-%Y")
runif(1, min=0, max = 1)
runif(1, min=0, max = 1)
make_coords <- function(draws){
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
df$dist <- sqrt(x^2 + y^2)
ratio <- sum(df$dist =< 1)/nrow(df)
make_coords <- function(draws){
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
df$dist <- sqrt(x^2 + y^2)
ratio <- sum(df$dist =< 1)/nrow(df)
make_coords <- function(draws){
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
df$dist <- sqrt(x^2 + y^2)
ratio <- sum(df$dist <= 1)/nrow(df)
return_statement <- paste0("Pi is approximately ", ratio*4, "!")
}
make_coords(draws=1000)
draws=1000
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
df$dist <- sqrt(x^2 + y^2)
View(df)
sqrt(x^2 + y^2)
dist <- sqrt(x^2 + y^2)
ratio <- sum(dist <= 1)/nrow(df)
nrow(df)
df <- cbind(x,y)
View(df)
nrow(df)
ratio <- sum(dist <= 1)/nrow(df)
ratio*4
make_coords <- function(draws){
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
dist <- sqrt(x^2 + y^2)
ratio <- sum(dist <= 1)/nrow(df)
return_statement <- paste0("Pi is approximately ", ratio*4, "!")
}
make_coords(draws=1000)
make_coords <- function(draws){
x <- runif(draws, min = 0, max = 1)
y <- runif(draws, min = 0, max = 1)
df <- cbind(x,y)
dist <- sqrt(x^2 + y^2)
ratio <- sum(dist <= 1)/nrow(df)
return_statement <- paste0("Pi is approximately ", ratio*4, "!")
return(return_statement)
}
make_coords(draws=1000)
make_coords(draws=5000)
make_coords(draws=10000)
make_coords(draws=100000)
make_coords(draws=1000000)
make_coords(draws=10000000)
library(googledrive)
drive_ls(path = "https://drive.google.com/drive/u/1/folders/1CvYh6ZDVfnyGLPFqPAr8gVNoLE_7BsKS")
drive_ls(path = "https://drive.google.com/drive/u/1/folders/1Cvo7idJlrujxCSy6nC6TNs7BV9OwmiUR")
test <- drive_ls(path = "https://drive.google.com/drive/u/1/folders/1Cvo7idJlrujxCSy6nC6TNs7BV9OwmiUR")
library(tidyverse)
find_pi <- function(draws){
x_coords <- runif(draws, min = 0, max = 1)
y_coords <- runif(draws, min = 0, max = 1)
df <- data.frame(x_coords, y_coords)
df$dist <- sqrt(df$x_coords^2 + df$y_coords^2)
df$withins <- ifelse(df$dist =< 1, 1, 0)
find_pi <- function(draws){
x_coords <- runif(draws, min = 0, max = 1)
y_coords <- runif(draws, min = 0, max = 1)
df <- data.frame(x_coords, y_coords)
df$dist <- sqrt(df$x_coords^2 + df$y_coords^2)
df$withins <- ifelse(df$dist <= 1, 1, 0)
diagnostic <- paste0("pi is approximately ", (sum(df$withins == 1)/nrow(df))*4, "!")
df %>%
ggplot(aes(x=x_coords, y = y_coords, color = withins)) +
geom_point()
print(diagnostic)
}
find_pi(1000)
draws=1000
x_coords <- runif(draws, min = 0, max = 1)
y_coords <- runif(draws, min = 0, max = 1)
df <- data.frame(x_coords, y_coords)
df$dist <- sqrt(df$x_coords^2 + df$y_coords^2)
df$withins <- ifelse(df$dist <= 1, 1, 0)
diagnostic <- paste0("pi is approximately ", (sum(df$withins == 1)/nrow(df))*4, "!")
df %>%
ggplot(aes(x=x_coords, y = y_coords, color = withins)) +
geom_point()
find_pi <- function(draws){
x_coords <- runif(draws, min = 0, max = 1)
y_coords <- runif(draws, min = 0, max = 1)
df <- data.frame(x_coords, y_coords)
df$dist <- sqrt(df$x_coords^2 + df$y_coords^2)
df$withins <- ifelse(df$dist <= 1, "Yes", "No")
diagnostic <- paste0("pi is approximately ", (sum(df$withins == "Yes")/nrow(df))*4, "!")
print(diagnostic)
return(df)
}
find_pi(1000)
test <- find_pi(1000)
test %>%
ggplot(aes(x=x_coords,y=y_coords, color = withins)) +
geom_point() +
theme_bw()
test <- find_pi(100000)
test %>%
ggplot(aes(x=x_coords,y=y_coords, color = withins)) +
geom_point() +
theme_bw()
?seq_along
runif(1, min = 1, max = 7)
setwd("C:/Users/xdiega/OneDrive/Documents/advanced_statistics_phd/private_r_tutorial")
load("../../MA thesis/Data and R scripts/Survey Data/SurvData.Rdata")
View(SurvData)
head(SurvData)
SurvData_mut <- SurvData %>%
mutate(gender = gender - 1)
library(tidyverse)
SurvData_mut <- SurvData %>%
mutate(gender = gender - 1)
View(SurvData_mut)
table(SurvData$gender)
table(SurvData_mut$gender)
table(SurvData$gender) == table(SurvData_mut$gender)
SurvData_ifelsed <- SurvData %>%
mutate(gender = ifelse(gender == 2, "Woman", "Man"))
table(SurvData$gender)
table(SurvData_ifelsed$gender)
names(SurvData)
summary(SurvData$gender)
table(SurvData$gender)
table(SurvData$gender, SurvData$whostility)
table(SurvData$country)
jap_surv <- SurvData %>%
filter(country == "Japan")
SurvData <- SurvData %>%
mutate(gender_ifelsed = ifelse(gender == 2, "Woman", "Man"))
jap_surv_w <- SurvData %>%
filter(country == "Japan", gender_ifelsed == "Woman")
table(jap_surv_w$country, jap_surv_w$gender_ifelsed)
women_or_japanese <- SurvData %>%
filter(country == "Japan" | gender_ifelsed == "Woman")
table(women_or_japanese$country, women_or_japanese$gender_ifelsed)
table(SurvData$whostility)
grouped_f <- SurvData %>%
mutate(whostility = ifelse(whostility < 0, NA, whostility)) %>%  # You can add the unchanged vector as a responsein an ifelse, Values less than 0 are missing categories in WVS
group_by(country, year) %>%
summarise(respondents = n(),
whostility = mean(whostility, na.rm = TRUE))
View(grouped_f)
grouped_f %>% ### Obviously you can pipe it in
ggplot(aes(x=year, y=whostility, color = country)) +
geom_point()
grouped_f %>%
ggplot(aes(x=year, y=whostility, color = country)) +
geom_point() +
theme_bw() +
labs(title = "Here's a Title", x = "Time period", y = "Anti-women sentiment", color = "Region")
table(grouped_f$year)
grouped_f %>%
mutate(wave = case_when(
year == 1995 | year == 1996 ~ 1,
year == 2000 | year == 2001 ~ 2,
year == 2005 ~ 3,
year == 2010 ~ 4
)) %>%
ggplot(aes(x=wave, y = whostility, color = country)) +
geom_point(size = 2) +
theme_bw() +
scale_color_manual(values = c("cornflowerblue", "goldenrod")) +
labs(title = "Hostility towards women as legislators", x = "WVS Wave", y = "Hostility")
?gadm
??gadm
?geom_sf
library(geodata) # for gadm download
nor_map <- gadm(country = "NO", level = 1)
nor_map <- gadm(country = "NO", level = 1, path = "./")
ggplot() +  ## in map data the ggplot is empty
geom_sf(data = map, aes(geometry = geometry),
stat = "sf_coordinates") +
theme_void() # common theme to eliminate all lines
ggplot() +  ## in map data the ggplot is empty
geom_sf(data = nor_map, aes(geometry = geometry),
stat = "sf_coordinates") +
theme_void() # common theme to eliminate all lines
nor_map <- gadm(country = "NO", level = 1, path = "./") %>%
st_as_sf()
library(sf)
nor_map <- gadm(country = "NO", level = 1, path = "./") %>%
st_as_sf()
ggplot() +  ## in map data the ggplot is empty
geom_sf(data = nor_map, aes(geometry = geometry),
stat = "sf_coordinates") +
theme_void() # common theme to eliminate all lines
plot(nor_map$geometry)
ggplot() +  ## in map data the ggplot is empty
geom_sf(data = nor_map, aes(geometry = geometry),
stat = "sf_coordinates") +
theme_void()
ggplot() +  ## in map data the ggplot is empty
geom_sf(data = nor_map) +
theme_void() # common theme to eliminate all lines
table(nor_map$HASC_1)
nor_map <- nor_map %>%
mutate(me_there = case_when(
HASC_1 == "NO.AA" ~ "Yes",
HASC_1 == "NO.AK" ~ "Home",
HASC_1 == "NO.BU" ~ "Yes",
HASC_1 == "NO.FI" ~ "No",
HASC_1 == "NO.HE" ~ "Yes",
HASC_1 == "NO.HO" ~ "Yes",
HASC_1 == "NO.MR" ~ "No",
HASC_1 == "NO.NO" ~ "No",
HASC_1 == "NO.NT" ~ "No",
HASC_1 == "NO.OF" ~ "Yes",
HASC_1 == "NO.OP" ~ "Yes",
HASC_1 == "NO.OS" ~ "Yes",
HASC_1 == "NO.RO" ~ "Yes",
HASC_1 == "NO.SF" ~ "Home",
HASC_1 == "NO.ST" ~ "Yes",
HASC_1 == "NO.TE" ~ "Yes",
HASC_1 == "NO.TR" ~ "No",
HASC_1 == "NO.VA" ~ "Yes",
HASC_1 == "NO.VF" ~ "Yes"
))
ggplot() +
geom_sf(data = nor_map, aes(color = me_there)) +
theme_void() +
labs(title = "Mitt lille land", color = "Have I been?") +
scale_color_manual(values = c("goldenrod", "firebrick", "cornflowerblue"))
ggplot() +
geom_sf(data = nor_map, aes(fill = me_there)) +
theme_void() +
labs(title = "Mitt lille land", fill = "Have I been?") +
scale_fill_manual(values = c("goldenrod", "firebrick", "cornflowerblue"))
SurvData %>%
pull(whostility) %>%
mean(na.rm = TRUE)
mean(pull(SurvData, whostility), na.rm = TRUE)
plot(density(SurvData$whostility))
hist(SurvData$whostility)
str_extract(this_is_a_string, "\\,.*")
this_is_a_string <- "hi my name is Gard and I have clinical depression, please help"
str_extract(this_is_a_string, "\\,.*")
str_extract(this_is_a_string, "(?<=\\,).*")
for(i in 1:length(loopy_vector)){
loopy_vector[i]^2
}
loopy_vector <- c(15,23,34,66,32)
for(i in 1:length(loopy_vector)){
loopy_vector[i]^2
}
print(loopy_vector[i]^2)
for(i in 1:length(loopy_vector)){
print(loopy_vector[i]^2)
}
lapply(loopy_vector, FUN = function(x){ ## x serves here as our "iterator"
y <- x^2
return(y)
})
names(SurvData)
table(SurvData$PolDisc)
my_vars <- c("PolDisc", "interest", "whostility")
grouped_more <- SurvData %>%
mutate(across(all_of(my_vars), ~ ifelse(.x < 0, NA, .x)))
my_vars <- c("PolDisc", "interest", "whostility")
table(SurvData$PolDisc)
table(grouped_more$PolDisc)
grouped_more <- SurvData %>%
mutate(across(all_of(my_vars), ~ ifelse(.x < 0, NA, .x))) %>%
group_by(country, year) %>%
summarise(across(all_of(my_vars), ~ mean(.x, na.rm = TRUE)))
View(grouped_more)
table(SurvData$PolDisc[which(SurvData$year == 2005)])
table(SurvData$PolDisc[which(SurvData$year == 2010)])
mean(NULL)
mean(NULL, na.rm = TRUE)
mean(NA, na.rm = TRUE)
load("../../advanced_statistics_phd/my_data/simple_set.rda")
names(joined_sets2)
vars_i <- names(joined_sets2)[16:29]
vars_i
mean_values_for_transf <- joined_sets2 %>%
select(parti, tid, all_of(vars_i)) %>%
group_by(parti, tid) %>%
summarise(across(all_of(vars_i), ~ mean(.x, na.rm = TRUE)))
View(mean_values_for_transf)
attributes(joined_sets2$straff)
class(joined_set2$straff)
load("../../advanced_statistics_phd/my_data/simple_set.rda")
class(joined_set2$straff)
class(joined_sets2$straff)
class(joined_sets2$straff, joiend_sets2$eu)
class(joined_sets2$straff, joinend_sets2$eu)
class(joined_sets2$straff, joined_sets2$eu)
joined_sets2_mutated <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ ifelse(.x > 2.5, "High", "Low")))
class(joined_sets2$straff)
table(joined_sets2$straff)
table(joined_sets2$straff)
View(joined_sets2)
table(joined_sets2$straff)
summary(joined_sets2$straff)
head(joined_sets2[,16:29])
joined_sets2$straff
joined_sets2_mutated <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ as.numeric(.x))) %>%
mutate(across(all_of(vars_i), ~ ifelse(.x > 2.5, "High", "Low")))
as.numeric(joined_sets2$straff)
Sys.setlocale()
as.numeric(joined_sets2$straff)
rlang::last_trace()
library(tidyverse)
as.numeric(joined_sets2$straff)
library(haven)
vars_i <- names(joined_sets2)[16:29]
joined_sets2_mutated <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ as.numeric(.x))) %>%
mutate(across(all_of(vars_i), ~ ifelse(.x > 2.5, "High", "Low")))
as.numeric(joined_sets2$straff)
load("../../advanced_statistics_phd/my_data/simple_set.rda")
joined_sets2_mutated <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ as.numeric(.x))) %>%
mutate(across(all_of(vars_i), ~ ifelse(.x > 2.5, "High", "Low")))
as.numeric(joined_sets2$straff)
table(joined_sets2$straff)
joined_sets2_mutated <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x))) %>%
mutate(across(all_of(vars_i), ~ ifelse(.x > 2.5, "High", "Low")))
head(joined_sets2[,16:29])
#Compared with
head(joined_sets2_mutated[,16:29])
install.packages("MASS")
?MASS::polr
grouped_f %>%
mutate(wave = case_when(
year == 1995 | year == 1996 ~ 1,
year == 2000 | year == 2001 ~ 2,
year == 2005 ~ 3,
year == 2010 ~ 4
)) %>%
ggplot(aes(x=wave, y = whostility, color = country)) +
geom_point(size = 2) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("cornflowerblue", "goldenrod")) +
labs(title = "Hostility towards women as legislators", x = "WVS Wave", y = "Hostility")
pi_estimator <- function(samples){
x <- runif(samples, min = 0, max = 1)
y <- runif(samples, min = 0, max = 1)
z <- srqt(x^2 + y^2)
in_out <- ifelse(z <= 1, "Yes", "No")
out <- sum(in_out == "Yes")*4
return(out)
}
pi_estimator(1000)
pi_estimator <- function(samples){
x <- runif(samples, min = 0, max = 1)
y <- runif(samples, min = 0, max = 1)
z <- sqrt(x^2 + y^2)
in_out <- ifelse(z <= 1, "Yes", "No")
out <- sum(in_out == "Yes")*4
return(out)
}
pi_estimator(1000)
pi_estimator <- function(samples){
x <- runif(samples, min = 0, max = 1)
y <- runif(samples, min = 0, max = 1)
z <- sqrt(x^2 + y^2)
in_out <- ifelse(z <= 1, "Yes", "No")
out <- (sum(in_out == "Yes")*4)/samples
return(out)
}
pi_estimator(1000)
pi_estimator(100000)
pi_estimator(100000000)
View(mean_values_for_transf)
mean_values_for_transf <- joined_sets2 %>%
select(parti, tid, all_of(vars_i)) %>%
group_by(parti, tid) %>%
summarise(across(all_of(vars_i), ~ mean(.x, na.rm = TRUE))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_to = "mean_vals")
View(mean_values_for_transf)
head(mean_values_for_transf)
new_joined <- joined_sets2 %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response")
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ zap_label(.x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_label(.x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_label(.x)))
View(new_joined)
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x)),
across(all_of(vars_i), ~ as.numeric(.x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x)),
across(all_of(vars_i), ~ ifelse(is.na(.x), -999, .x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_drop_na = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_to = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
View(new_joined)
new_joined <- joined_sets2 %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x)),
across(all_of(vars_i), ~ ifelse(!(.x %in% c(1,2,3,4,5)), NA, .x))) %>%
pivot_longer(cols = all_of(vars_i), names_to = "question", values_to = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question"))
View(new_joined)
attributes(joined_sets2$straff)
dim(new_joined)
dist_means_joined <- new_joined %>%
mutate(dist_score = q_response - mean_vals) %>%
select(-q_score, -mean_vals) %>% ### Removing these because they are reduntant and would create strange frames
pivot_wider(names_from = "question", values_from = "dist_score")
dist_means_joined <- new_joined %>%
mutate(dist_score = q_response - mean_vals) %>%
select(-q_response, -mean_vals) %>% ### Removing these because they are reduntant and would create strange frames
pivot_wider(names_from = "question", values_from = "dist_score")
View(dist_means_joined)
joined_sets2_i <-joined_sets2
joined_sets2_i$id <- 1:nrow(joined_sets2)
new_joined <- joined_sets2_i %>%
mutate(across(all_of(vars_i), ~ haven::zap_labels(.x)),
across(all_of(vars_i), ~ ifelse(!(.x %in% c(1,2,3,4,5)), NA, .x))) %>%  ## Likert scale, so outside 1-5 is missing vals
pivot_longer(cols = all_of(vars_i), names_to = "question", values_to = "q_response") %>%
left_join(mean_values_for_transf, by = c("parti", "tid", "question")) ## Note the join so that the mean vals for the questions is there as well
dist_means_joined <- new_joined %>%
mutate(dist_score = q_response - mean_vals) %>%
select(-q_response, -mean_vals) %>% ### Removing these because they are reduntant and would create strange frames
pivot_wider(names_from = "question", values_from = "dist_score")
head(joined_sets2[,vars_i])
head(dist_means_joined[,vars_i])
dist_means_joined <- new_joined %>%
mutate(dist_score = q_response - mean_vals) %>%
select(-q_response, -mean_vals) %>% ### Removing these because they are reduntant and would create strange frames
pivot_wider(names_from = "question", values_from = "dist_score")
head(dist_means_joined[,vars_i])
joined_lim_agg <- joined_sets2 %>%
group_by(parti, tid) %>%
summarise(mean_eu = mean(eu, na.rm = TRUE))
joined_lim <- joined_sets2 %>%
select(kjonn, parti, tid, eu)
View(joined_lim_agg)
joined_lim <- joined_sets2 %>%
mutate(eu = ifelse(eu %in% c(1,2,3,4,5), eu, NA)) %>%
select(kjonn, parti, tid, eu)
joined_lim_agg <- joined_sets2 %>%
mutate(eu = ifelse(eu %in% c(1,2,3,4,5), eu, NA)) %>%
group_by(parti, tid) %>%
summarise(mean_eu = mean(eu, na.rm = TRUE))
View(joined_lim_agg)
head(joined_lim)
joined_lim_joined <- joined_lim %>%
left_join(joined_lim_agg, by = c("parti", "tid")) # Here i join in the new set, i know that the parti and tid variables are in both sets
head(joined_lim_joined)
joined_lim[c(3,4,64,65,556,557,1231,1232,5688, 5689,6783, 6784),] ## Indexing some random rows, so we can see variance
joined_lim[c(3,4,64,65,556,557,1231,1232,5688, 5689,6783, 6784),] ## Indexing the same
joined_lim_joined[c(3,4,64,65,556,557,1231,1232,5688, 5689,6783, 6784),] ## Indexing the same
